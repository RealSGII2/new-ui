@import './defaultThemes/default';

$color-amount: 10%;
$transparent-amount--hover: 0.9;
$transparent-amount--active: 0.7;

@function theme($map, $keys...) {
    @each $key in $keys {
        $map: map-get($map, $key);
    }
    @return $map;
}

@function light($color) {
  @return lightness($color) > 65;
}

@mixin md-image-aspect-ratio($width, $height) {
    overflow: hidden;
    &:before{
      width: 100%;
      padding-top: ($height / $width) * 100%;
      display: block;
      content: " ";
    }
    img {
      position: absolute;
      top: 50%;
      right: 0;
      left: 0;
      transform: translateY(-50%);
    }
  }
  .new-card-media {
    position: relative;
    &.media-ratio-16-9 {
      @include media-image-aspect-ratio(16, 9);
    }
    &.media-ratio-4-3 {
      @include media-image-aspect-ratio(4, 3);
    }
    &.media-ratio-1-1 {
      @include media-image-aspect-ratio(1, 1);
    }
    + .new-card__header {
      padding-top: 24px;
    }
    + .new-card__content:last-child {
      padding-bottom: 16px;
    }
    img {
      width: 100%;
    }
  }

  .new-card__media-actions {
    padding: 16px;
    display: flex;
    justify-content: space-between;
    .new-card__media {
      $size: 240px;
      max-width: $size;
      max-height: $size;
      flex: 1;
    }
    .new-card__actions {
      margin-left: 16px;
      flex-direction: column;
      justify-content: flex-start;
      align-items: center;
      .new-button + .new-button {
        margin: 8px 0 0;
      }
    }
  }

@mixin button-background($color) {
    background-color: $color;
    border-color: $color;

    @if (light($color)) {
      color: #000000;
    } @else {
      color: #ffffff;
    }
}

@mixin button-text($button-color) {
  color: $button-color;
  background-color: transparent;
  border-color: transparent;

  &:hover {
    background-color: transparentize($button-color, $transparent-amount--hover);
    border-color: transparentize($button-color, $transparent-amount--hover);
  }

  &:active {
    background-color: transparentize($button-color, $transparent-amount--active);
    border-color: transparentize($button-color, $transparent-amount--active);
  }
}

@mixin button-stroked($button-color) {
  color: $button-color;
  background-color: transparent;
  border-color: $button-color;

  &:hover {
    $transparent-amount: 0.8;
    background-color: transparentize($button-color, $transparent-amount--hover);
  }

  &:active {
    $transparent-amount: 0.6;
    background-color: transparentize($button-color, $transparent-amount--active);
  }
}

@mixin button-filled($button-color) {
  @include button-background($button-color);

  &:hover {
    @include button-background(lighten($button-color, $color-amount));
  }

  &:active {
    @include button-background(darken($button-color, $color-amount));
  }
}

@mixin button-color($button-color) {
  &--text {
    @include button-text($button-color);
  }

  &--stroked {
    @include button-stroked($button-color);
  }

  &--filled {
    @include button-filled($button-color);
  }
}

@mixin button-color-toolbar($button-color) {
  &--text {
    .new-ui.new-button {@include button-text($button-color);}
  }

  &--stroked {
    .new-ui.new-button {@include button-stroked($button-color);}
  }

  &--filled {
    .new-ui.new-button {@include button-filled($button-color);}
  }
}

@mixin themable($name, $package) {
     $button-border-radius: theme($package, 'layout', 'borders', 'radius', 'base');

     .new-ui {
       outline: none;
     }

     .new-ui.elevated:not(.new-button--stroked):not(.new-button--text) {
       box-shadow: 0px theme($package, 'layout', 'elevation', 'base', 'distance') theme($package, 'layout', 'elevation', 'base', 'blur') theme($package, 'layout', 'elevation', 'color');
     }

     .new-ui.elevated-high:not(.new-button--stroked):not(.new-button--text) {
       box-shadow: 0px theme($package, 'layout', 'elevation', 'elevated', 'distance') theme($package, 'layout', 'elevation', 'elevated', 'blur') theme($package, 'layout', 'elevation', 'color');
     }

     .new-ui.new-button {
       transition: theme($package, 'elements', 'button', 'transition-time');
       border-radius: $button-border-radius;
       padding: theme($package, 'layout', 'padding', 'button');
       border-width: theme($package, 'layout', 'borders', 'thickness', 'base');
       border-style: solid;
       min-width: 50px;

       // Apply shape
       &--pill {
         border-radius: theme($package, 'layout', 'borders', 'radius', 'round');
       }

       &--tile {
         border-radius: theme($package, 'layout', 'borders', 'radius', 'tile');
       }

       // Apply padding
       &--expanded {
         padding: theme($package, 'layout', 'padding', 'button-expanded');
       }

       // Set color
       &--default {
         @include button-color(theme($package, 'colors', 'default'));
       }

       &--brand {
         @include button-color(theme($package, 'colors', 'brand'));
       }

       &--accent {
         @include button-color(theme($package, 'colors', 'accent'));
       }

       &--error {
         @include button-color(theme($package, 'colors', 'states', 'error'));
       }

       &--warn {
         @include button-color(theme($package, 'colors', 'states', 'warn'));
       }

       &--success {
         @include button-color(theme($package, 'colors', 'states', 'success'));
       }

       &--info {
         @include button-color(theme($package, 'colors', 'states', 'info'));
       }
     }

     .new-ui.new-button-toolbar {
       .new-ui.new-button {
         margin: 0px !important;
         display: inline-block !important;
         border-radius: 0px !important;
       }

       &:not(.pill) {
         .new-ui.new-button {
           &:first-child {
             border-radius: $button-border-radius 0 0 $button-border-radius !important;
           }

           &:last-child {
             border-radius: 0 $button-border-radius $button-border-radius 0 !important;
           }
         }
       }

       &.pill {
         .new-ui.new-button {
           &:first-child {
             border-radius: $button-border-radius 0 0 $button-border-radius !important;
           }

           &:last-child {
             border-radius: 0 $button-border-radius $button-border-radius 0 !important;
           }
         }
       }
     }

     .new-ui.new-card {
       padding: theme($package, 'layout', 'padding', 'base');
       border-radius: theme($package, 'layout', 'borders', 'radius', 'base');
       box-shadow: 0px theme($package, 'layout', 'elevation', 'base', 'distance') theme($package, 'layout', 'elevation', 'base', 'blur') theme($package, 'layout', 'elevation', 'color');
       transition: theme($package, 'elements', 'card', 'transition-time');

       &.interactable:hover {
         box-shadow: 0px theme($package, 'layout', 'elevation', 'elevated', 'distance') theme($package, 'layout', 'elevation', 'elevated', 'blur') theme($package, 'layout', 'elevation', 'color');
         cursor: pointer;
       }

       .new-ui.new-card__expand-button {
         transition: theme($package, 'elements', 'card', 'transition-time');
       }

       &.expanded {
         .new-ui.new-card__expand-button {
           transform: rotate(180deg);

         }
       }

       &.__title, &.__subheader {
         margin: 0;
       }

       &.__title {
         font-size: 20px;
         letter-spacing: 0;
         line-height: 28px;
       }

       &.__subheader {
         opacity: .6;
         font-size: 15px;
         letter-spacing: .01em;
         line-height: 20px;

         + .new-ui.new-card__title {
           margin-top: 4px;
         }
       }

       &.__header {
          padding: 16px;
          &:first-child {
            > .new-ui.new-card__title:first-child,
            > .new-ui.new-card__header-text > .new-ui.new-card__title:first-child {
              margin-top: 8px;
            }
          }
          &:last-child {
            margin-bottom: 8px;
          }
          &.new-ui.new-card__header-flex {
            display: flex;
            justify-content: space-between;
          }
          + .new-ui.new-card__content {
            padding-top: 0;
          }
          + .new-ui.new-card__actions:not(:last-child) {
            padding: 0 8px;
          }
          > img {
            border-radius: 50%;
          }
          > img,
          .new-ui.new-card__avatar {
            margin-right: 16px;
            float: left;
            ~ .new-ui.new-card__title {
              font-size: 14px;
            }
            ~ .new-ui.new-card__title,
            ~ .new-ui.new-card__subhead {
              font-weight: 500;
              line-height: 20px;
            }
          }
          .new-ui.new-card__button {
            margin: 0;
            &:last-child {
              margin-right: -4px;
            }
            + .new-button {
              margin-left: 8px;
            }
          }
          .new-ui.new-card__header-text {
            flex: 1;
          }
          .new-ui.new-card__media {
            $size: 80px;
            width: $size;
            height: $size;
            margin-left: 16px;
            flex: 0 0 $size;
            &.new-ui.new-card__media__medium {
              $size: 120px;
              width: $size;
              height: $size;
              flex: 0 0 $size;
            }
            &.new-ui.new-card__media__big {
              $size: 160px;
              width: $size;
              height: $size;
              flex: 0 0 $size;
            }
          }
          .new-card__content {
            padding: 16px;
            font-size: 14px;
            line-height: 22px;
            &:last-of-type {
              padding-bottom: 24px;
            }
          }
        }
     }

  .new-card__media-cover {
    position: relative;
    color: #fff;
    &.md-solid {
      .new-card__area {
        background-color: rgba(#000, .54);
      }
    }
    &.new-text-scrim {
      .new-card__backdrop {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        z-index: 1;
      }
    }
    .new-card__area {
      display: flex;
      flex-direction: column;
      position: absolute;
      right: 0;
      bottom: 0;
      left: 0;
      z-index: 2;
    }
    .new-card__header {
      display: flex;
      flex-direction: column;
      + .new-card__actions {
        padding-top: 0;
      }
    }
    .new-subhead {
      opacity: 1;
    }
    .new-card__header,
    .new-card__actions {
      .new-button.new-button--text {
        color: #fff !important;
      }

      .new-button.new-button--outline {
        color: #fff !important;
        border-color: #fff !important;
      }
    }
  }

  .new-card__actions {
    padding: 8px;
    display: flex;
    align-items: center;
    &.new-alignment--right {
      justify-content: flex-end;
    }
    &.new-alignment--left {
      justify-content: flex-start;
    }
    &.new-alignment--space-between {
      justify-content: space-between;
    }
    .new-button {
      margin: 0;
      &:first-child {
        margin-left: 0;
      }
      &:last-child {
        margin-right: 0;
      }
      + .md-button {
        margin-left: 4px;
      }
    }
  }

  .new-card__area {
   position: relative;
 }
 .new-card {
   > .new-card__area:not(:last-child) {
     position: relative;
     &:after {
       height: 1px;
       position: absolute;
       bottom: 0;
       content: " ";
     }
     &:not(.new-inset):after {
       right: 0;
       left: 0;
     }
     &.new-inset:after {
       right: 16px;
       left: 16px;
     }
   }
 }
}

.new-ui.new-app.new-app--themeable.new-app--use_styles {}

@include themable(default, $theme-package);
